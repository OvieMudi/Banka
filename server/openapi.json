{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Banka API",
    "description" : "Banka is a light-weight core banking application that powers banking operations like account creation, customer deposit and withdrawals. More info can be found on [GitHub](https://github.com/OvieMudi/Banka).\n",
    "license" : {
      "name" : "MIT Licence",
      "url" : "https://github.com/OvieMudi/Banka/blob/develop/LICENSE"
    },
    "version" : "1.0.0-oas3"
  },
  "servers" : [ {
    "url" : "https://calm-dusk-51134.herokuapp.com"
  } ],
  "security" : [ {
    "bearerAuth" : [ ]
  } ],
  "paths" : {
    "/auth/signin" : {
      "post" : {
        "summary" : "Sign in as client or staff",
        "operationId" : "signin",
        "requestBody" : {
          "description" : "app user that needs to sign in to continue",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "returns the signed in user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/auth"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "500" : {
            "$ref" : "#/components/schemas/error500"
          }
        }
      }
    },
    "/auth/users/signup" : {
      "post" : {
        "summary" : "Register a client",
        "operationId" : "signup",
        "requestBody" : {
          "description" : "app user that needs to sign in to continue",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/clientSignup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "returns the created user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/auth"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "500" : {
            "$ref" : "#/components/schemas/error500"
          }
        }
      }
    },
    "/auth/admin/create" : {
      "post" : {
        "summary" : "Create staff",
        "operationId" : "staffCreate",
        "requestBody" : {
          "description" : "app user that needs to sign in to continue",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "returns the created Staff details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/auth"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "500" : {
            "$ref" : "#/components/schemas/error500"
          }
        }
      }
    },
    "/accounts" : {
      "get" : {
        "summary" : "Get all account record in the database",
        "operationId" : "getAllAccounts",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Gets all active or inactive accounts",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "returns all accounts in database",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/account"
                  }
                }
              }
            }
          },
          "403" : {
            "$ref" : "#/components/schemas/error403"
          },
          "404" : {
            "$ref" : "#/components/schemas/error404"
          },
          "500" : {
            "$ref" : "#/components/schemas/error500"
          }
        }
      },
      "post" : {
        "summary" : "Create a bank account",
        "operationId" : "createAccount",
        "requestBody" : {
          "description" : "account type: savings or curent",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "returns the created user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/accountCreate"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "500" : {
            "$ref" : "#/components/schemas/error500"
          }
        }
      }
    },
    "/account/{accountNumber}" : {
      "delete" : {
        "summary" : "Delete a bank account",
        "operationId" : "deleteAccount",
        "parameters" : [ {
          "name" : "accountNumber",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "returns success message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "401" : {
            "$ref" : "#/components/schemas/error401"
          },
          "403" : {
            "$ref" : "#/components/schemas/error403"
          },
          "404" : {
            "$ref" : "#/components/schemas/error404"
          }
        }
      },
      "patch" : {
        "summary" : "Update a bank account",
        "operationId" : "updateAccount",
        "parameters" : [ {
          "name" : "accountNumber",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "change account status to active or dormant",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "returns the created user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/account"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "401" : {
            "$ref" : "#/components/schemas/error401"
          },
          "403" : {
            "$ref" : "#/components/schemas/error403"
          }
        }
      }
    },
    "/transactions/{accountNumber}/debit" : {
      "patch" : {
        "summary" : "Debit a bank account",
        "operationId" : "debit",
        "parameters" : [ {
          "name" : "accountNumber",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "amount of debit on account",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_3"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "returns an alert from the created transaction",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/alert"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "401" : {
            "$ref" : "#/components/schemas/error401"
          },
          "403" : {
            "$ref" : "#/components/schemas/error403"
          },
          "404" : {
            "$ref" : "#/components/schemas/error404"
          }
        }
      }
    },
    "/transactions/{accountNumber}/credit" : {
      "patch" : {
        "summary" : "Credit a bank account",
        "operationId" : "credit",
        "parameters" : [ {
          "name" : "accountNumber",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "amount of credit on account",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_4"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "returns an alert from the created transaction",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/alert"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "401" : {
            "$ref" : "#/components/schemas/error401"
          },
          "403" : {
            "$ref" : "#/components/schemas/error403"
          },
          "404" : {
            "$ref" : "#/components/schemas/error404"
          }
        }
      }
    },
    "/accounts/{accountNumber}/transactions" : {
      "get" : {
        "summary" : "Get account history",
        "operationId" : "getAccountHistory",
        "parameters" : [ {
          "name" : "accountNumber",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "returns an all transactions on an account",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/transaction"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "401" : {
            "$ref" : "#/components/schemas/error401"
          },
          "403" : {
            "$ref" : "#/components/schemas/error403"
          },
          "404" : {
            "$ref" : "#/components/schemas/error404"
          }
        }
      }
    },
    "/transactions/{transactionId}" : {
      "get" : {
        "summary" : "Get a single transaction",
        "operationId" : "getSingleTransaction",
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "returns a single transaction record",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/transaction"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "401" : {
            "$ref" : "#/components/schemas/error401"
          },
          "403" : {
            "$ref" : "#/components/schemas/error403"
          },
          "404" : {
            "$ref" : "#/components/schemas/error404"
          }
        }
      }
    },
    "/user/{userEmailAddress}/accounts" : {
      "get" : {
        "summary" : "Get all accounts associated with an email",
        "operationId" : "accountsByEmail",
        "parameters" : [ {
          "name" : "userEmailAddress",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "returns all accounts associated with email",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/account"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "401" : {
            "$ref" : "#/components/schemas/error401"
          },
          "403" : {
            "$ref" : "#/components/schemas/error403"
          },
          "404" : {
            "$ref" : "#/components/schemas/error404"
          }
        }
      }
    },
    "/accounts/{accountNumber}" : {
      "get" : {
        "summary" : "Get information of an account",
        "operationId" : "getSingleAccount",
        "parameters" : [ {
          "name" : "accountNumber",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "returns an account record",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/account"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/schemas/error400"
          },
          "401" : {
            "$ref" : "#/components/schemas/error401"
          },
          "403" : {
            "$ref" : "#/components/schemas/error403"
          },
          "404" : {
            "$ref" : "#/components/schemas/error404"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "user" : {
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "email" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "othername" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "sex" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "isAdmin" : {
            "type" : "boolean"
          }
        }
      },
      "clientSignup" : {
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "email" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "othername" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "sex" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          }
        }
      },
      "account" : {
        "required" : [ "accountNumber" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "accountNumber" : {
            "type" : "integer"
          },
          "createOn" : {
            "type" : "string"
          },
          "owner" : {
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "balance" : {
            "type" : "number"
          }
        }
      },
      "transaction" : {
        "required" : [ "accountNumber" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "createdOn" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "accountNumber" : {
            "type" : "integer"
          },
          "cashier" : {
            "type" : "integer"
          },
          "amount" : {
            "type" : "integer"
          },
          "oldBalance" : {
            "type" : "number"
          },
          "newBalance" : {
            "type" : "number"
          }
        }
      },
      "auth" : {
        "required" : [ "token" ],
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "data" : {
            "$ref" : "#/components/schemas/user"
          }
        }
      },
      "alert" : {
        "type" : "object",
        "properties" : {
          "transactionId" : {
            "type" : "number"
          },
          "accountNumber" : {
            "type" : "number"
          },
          "amount" : {
            "type" : "number"
          },
          "cashier" : {
            "type" : "number"
          },
          "transactionType" : {
            "type" : "string"
          },
          "accountBalance" : {
            "type" : "string"
          }
        }
      },
      "accountCreate" : {
        "type" : "object",
        "properties" : {
          "accountNumber" : {
            "type" : "number"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "example" : "savings, current"
          }
        }
      },
      "error400" : {
        "description" : "invalid request"
      },
      "error401" : {
        "description" : "unauthorized"
      },
      "error403" : {
        "description" : "forbidden"
      },
      "error404" : {
        "description" : "not found"
      },
      "error500" : {
        "description" : "internal server error"
      },
      "body" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "body_1" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer"
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "number"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "body_2" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          }
        }
      },
      "body_3" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number"
          }
        }
      },
      "body_4" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number"
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}